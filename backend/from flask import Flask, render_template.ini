from flask import Flask, render_template, request
import os
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import load_img, img_to_array
import numpy as np

app = Flask(__name__)
UPLOAD_FOLDER = 'uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Загрузка модели
model = load_model('model/classifier.h5')

# Карта меток
label_mapping = {
    0: 'Лисички (Съедобные)',
    1: 'Мухоморы (Несъедобные)',
    2: 'Грузди (Съедобные)',
    3: 'Белена (Несъедобные)',
    # добавь свои классы
}

def prepare_image(img_path):
    img = load_img(img_path, target_size=(128, 128))
    img_array = img_to_array(img) / 255.0
    return np.expand_dims(img_array, axis=0)

@app.route('/', methods=['GET', 'POST'])
def index():
    prediction = None
    filename = None
    if request.method == 'POST':
        file = request.files['image']
        if file:
            filename = file.filename
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(filepath)
            img = prepare_image(filepath)
            pred = model.predict(img)
            class_index = np.argmax(pred)
            prediction = label_mapping.get(class_index, "Неизвестно")
    return render_template('index.html', prediction=prediction, filename=filename)

if __name__ == '__main__':
    os.makedirs('uploads', exist_ok=True)
    app.run(debug=True)
